def remove_even(lst):
    return [number for number in lst if number % 2 != 0]

print(remove_even([4,6,9]))
    # use list comprhension in Python to solve this problem
    # Time Complexity is 0(n) since only the syntax has changed while the algorithm still iterates over all elements of the list.

    # Doing By Hand
    # def remove_even(lst):
#     odds = []  # Create a new empty list
#     for number in lst:  # Iterate over input list
#         # Check if the item in the list is NOT even
#         # ('%' is the modulus symbol!)
#         if number % 2 != 0:
#             odds.append(number)  # If it isn't even append it to the empty list
#     return odds  # Return the new list
#
#
# print(remove_even([3, 2, 41, 3, 34]))